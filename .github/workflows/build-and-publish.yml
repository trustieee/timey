name: Build and Publish

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

# Add explicit permissions to allow creating releases
permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [windows-latest]
    
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
      
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
        
      - name: Set environment variables for Windows
        if: matrix.os == 'windows-latest'
        run: echo "NODE_OPTIONS=--openssl-legacy-provider --experimental-global-webcrypto" >> $GITHUB_ENV
        shell: bash

      # Add global environment variables for non-Windows platforms        
      - name: Setup crypto polyfill for non-Windows
        if: matrix.os != 'windows-latest'
        run: echo "NODE_OPTIONS=--experimental-global-webcrypto" >> $GITHUB_ENV
        shell: bash
      
      # Create a .env file with the GitHub token for the build process
      - name: Create .env file
        run: |
          echo "# GitHub token for auto-updater (private repository access)" > .env
          echo "GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> .env
          echo "# electron-updater specifically looks for GH_TOKEN" >> .env
          echo "GH_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> .env
        shell: bash
      
      - name: Build/Publish Electron App
        run: npm run publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Remove the --no-experimental-fetch flag which might be causing issues
          # NODE_OPTIONS: --no-experimental-fetch 

      # Add a debugging step to see what was created
      - name: List distributables (for debugging)
        if: always()
        run: |
          echo "Listing distributable files:"
          ls -la out/make || true
          find out -type f -name "*.exe" || true
        shell: bash